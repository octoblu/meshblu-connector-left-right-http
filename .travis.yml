branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    language: node_js
    node_js: '8'
    after_success:
    - yarn global add meshblu-connector-schema-generator meshblu-connector-uploader-github
    - mkdir -p ./deploy/assets
    - meshblu-connector-schema-generator > ./deploy/assets/schemas.json
    - meshblu-connector-uploader-github --installers-path ./deploy/assets
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - meshblu-connector-pkger && meshblu-connector-installer-macos && meshblu-connector-uploader-github
env:
  global:
  - secure: E8bP4R//Lw1UFckx1fgqK71fX3KicSXEiWg5s59hMHeAYsskr6QmOT1EUO41o6i5qJQbeFF/B3scLQuRGL3T69mptF08aExVv9pE+CijbsE9Q4qaKmM2KLV7SGEMDiV7pWlGPkvCWSd433gJ45rD5CngWmOZkAFCBFvtErSntOcKFWU49GyUouAFgcOqYGQ8OKJbIU8q1T78CRVl/k11FfAHK/be3DO61CfGDo4Z2H6J0g/338oyKdd1jbofuqw1hjTVB8DorZoPEuQsQPMPn0zFFCB8bKFsH/75RVTfMDBGYKpy8l6BsMrlO/l5mLR4zuOgjeJA3MlSauro9zfpE2vuVncQE+Kkh9Vg/Z5bfHwtQuira3QjLU+KB9qFSA6IbyfQ3q69j3hvlLFjgYCRKC9TNucTiaIYvq35Ue1WuKRlkBP7QdYyYALeump7sW5grSlWqPm2FOllSUhyyvBGuG7sZIi6JIDVAUY6sdc8iUNERLDHALyEeOEpRmkAEXLywd0vH6fXMIcRo/ZQ3zD7xWLKjn7cxw9A1QVwJpButPKaI9i1DBDTV8lYCmcJSY9gapfky/lqGKpSPeAn40/sZSaoy4eWxHUxLiK4sXWi02Qpq6eC5jPCacwEf/rw782+HZzQ7vgjesUu5jw+vqUqv+YHeaJmYVX2rsen3p/OVfA=
  - secure: jSSgF7CxDx+FIj3UB2I9TtPO3uxNBJJz/xsWIumQDC0/BRBnaujI+IlhbkIer3D9HG1WVKPJxNITQaTvPCyK0jhnYkbyyWQJXpoRf5PN0GvCp6gSL6tpdIaOLw/iIzBJkpyNLN9ctn+sIEywRSFJWWprg65k+xCkgS6CJIkHR1rsI0G0Zq/jj3wPiebFU72iqBn5LffyIHtelFUKMJ1ItxRdLKpIjowIQVbJ7rOZEXwNWX/w1177HxGK3cpvc4OxvfN4XijawOCBVkd8K5ZpQ7XXwdhXFryUoMfRLSarYGWZWyXBrZPW/it3AfCZSnN+FhEe47IGq5yagay7uArNBJzIebsBdGbzKMVi0cJ5GFvQnfSAaRprUb5ZLV8FtHJ0a1g1udSszRmpxoH+YsZiMZ2KViHUgxVG2a9a5ki7B5D1QGgAHeaVQFNhFk4jZF7CZInGTZEn62UVzDXtz+eQCTgnwA+V0+POludi8dTyIW88VHcEidgMMprA9zXofXHE7LU/vb0IJ5PAtmSmgKxOIKhGceFCgqKtI8E3XcD1wUNURjd9HbetPmKnlULfSubILpV8GP1dcwx8jBA4WfXfReGKppMQDg9LuGa3nHjo1WDDK5m1GOO7sdUdKTREZ21oLCbNF7xobhLaHTjz2pRGYvx16R+3VPDQV8cz8cJV4QY=
  - secure: cAs7W9KcLeL39mxlEU8FiB3Zwbt1Px/K+vlKBliywvvL7+w0u+lr3jW0z3IzK0+KteTe48nU2stmT47W1+IeCeF+G0Y3l/MLjyWlsw07uxOcoN5FtUQdSocXzTpwcXkFXr4N/REZYmk4FTNAfAfm91SMk6JCS+FIzZBF0gcP5W/JW1cpxFOYjieLsxMExwnwH7kBk2IXjL+iRnZ42cQhrXNu6VLfWKXvoD6QNDQrrL0py9t9YrgjwVfZckj+T/B+3Cp2clfHxR+nUayQ4hXbf25/iODEe7OQmziFMsjRzQ7wo1nPXSW8jtzRgZJ23Ve4uNkr3ttCbr7+9sucQTdwDXts+vEpB64GPjJQywdLTRSC2eBZN+AWhDou2RZS5QHgCyiQN7AXNQYKDtYah8kHKPESHP7cjE5iyniJ5H5PmSWfYu3WNMJp/95n14xHfrh7ilW8o3+OSm5OF+vugHxC4sZASPJB3xkoT+sy9el8epC+IhGIJbjsQV0k9fVC33OTRNeAMQmZDLo3JsBIXID2SIHBFvYM6FJCjdvn4E4xroP8fSJo293FecGDOcWlz3zwGo8eYg7JTWBb01bf7D6fIJA6H1lkm++rvJujBAxpBaT2uVH+0ficCu/635IMcZkmqbi6jGXYb2VTGKgqCcMJAHkutcqsypFDs67dgumJWGk=
  - secure: r+1hiGUE1/nLOAf/tJyiIgPUHwAkJU/C85mDE1RUsofObt1grtp0GzxCBc4NP9UIkM8LlvbncUpwlb6HGoifp4Xk+mDaqPxnNXxXjoTRvLSHAQ7y4bZIetDFLRTpdPA7hrZAaC805WQbHkl3Y3vuH5MU5DjXHcNQrVfed7TJpsXszkKeCSFHdKFon0D5fCiEKIk6d3zPS+EVM/ndvqjXsT6IeN0uFAePt49PvGET0HTavfBa7fubAriyZnYZEzIGtrbFdNBB8kX64yfq8KgUIdvBp13n85pqL8q1mv+mmKPDRZTsTa5P+fQ07SpDnsew3SJKc/JEhw7qfy/Da5Af8mVEEIeuZhMu+Yjh2HIlEwbBvcKEg8cLa7xqIAyMMyC4TrgPF63vRf8t06cnB6/Wu21J6nj5hS4QqtowGeS4rR5nTwxmB6EQZ+9D7lbQJ75Jkez4dJmCRXWqFnBNQ78kl8TXLR4SMlUbJWt24edohog8ulyXxc6mlzooYnpHAZM6oMAd4n4CSUmA0hTbrfomBbQudYr2Mi8AQ3kOMnylRvXOtTEj/tqPXPkVJzzyIFuFw8rDJZceTlH25rDufcSM4KrVdiPPbz0Kq+86Y0U6z9bupt2eLhi80pAdQ+lTirI+vaG74UTQwMZRsPGRqLN4qPrOF0L9VNDliQBJQada/cE=
  - secure: C5GeqB3i57T5emjnxi+cVwmHSnowPcSB/IgJvvVCQOkBM2xX6YVjg3/mQ3dyeLYQzXwDK+nWIuqOxlE1cEy9W9rpt6ERITG79JL171oKFij+vuUPv+4V9CJa+sAP1xlFhRdcvYsMPKJhPDS1IJZk0CPSph/RzxE11kqDxFR7OHVynHt5tMtRShnV94p/t6YSIGZ0z+a7sB20NIX349yb4kplTMxLXnL7r8AufHbzmiKHHhG9kPALpPyoVOIT/d0/ZYE20yFSkN9GNTU1KRgSywGaClZh9GwKQO/QuGrDk5g6rC1buC4Uz8DHVnF6jxZEHEfW2zNt0g6vhNbBkiHBfBsg3jySKUSaUiQOx5vdKbc+iOC3/9Y6IytgF4+ywLUWQMBArYn1qck8dtLM34FGQKmL9wukOKKdCinRVtg15rdDR8fi6BrnuZn9WQiooOTG+pha+xpUBFDFEK/fC/l2S77DoHX5dcOK4yPQo2IQznl+UoDfqs3N1ehw4YSB8JWO9tSw3QPPcTXTWwrACw1NNtaAKcHBQE9aUOb7gvPBFtEBkSOwKbSlQ7OchXBr9nlC6XF3HZZlQEwyJ+1yqUrheEn4+PNDIcxzKRMQv8GDs4ZEDr/wqQfwmJbafJ0xSmdPrqJ5nx9aN4SSc3uCukixTAizRmNYIIDSEyHCxzlQCdY=
  - secure: Qejg+4YupFawMUdXpe54ZSBk82gkppaPV2Gr8hjx177KgTxOBu7jGAmUcLf5r2RfOCXXJ8ce+hQgkyxJux7x9DTX8TrvUBCMf+3T9Rx9LqmEwC6BB4X2yx7xhliSFRo0FE19zPTs5i0FH2yYAm6iFafzfQi38dNkr59kyreJW1UBd57A/cVLj14dQU+cQ7b4qaXEOn2GWGcKqBjye8bGvCcDbxFcB1wGF3aXurZlWqZ9xkNcpRREnIv/tom7Grpq53sHmviDegOpl9fK1metbFcaOh8qaxPCeH2mYjk2W72fl0JfQyY6Av+le1KXCSgGp6vt2oE3aLA5LGckbzgX4Hc3tXhrJQGfZVdvy4IftB57zTKcnvIwUOO4+Q8rGf5ca6VQwmwKMu7d61Mp+DTQ7g/5oRc0MViGKKulR+d/Wm+F3o5df+8vTaGlCaAJ10etSgCjV4iQekvPpdB4M2bjyWFnUq/LP+OMdEhXxoC/Se3NzrG/7Z9mWixzsCBr2i38GcQU+Rj+ILai3hey6kiO+/a6AjLGhJCH3PYjwQJX/Z6mvKUdg3PhRielZGq2Dh10kQGmgWpqPaaYfwn6LshSFDM25ENIm5/dG2YuQlByU8o7fB8mU8wAv4szM+5XupSntF91x018EoP4Xp72gGUwNBthpmmywuyJUCJe5Y10zCg=
  - secure: AsAV3IHy4CbvdtEt+HdU0dZ+JJDH/N1vBkHxa4g/B2jbgEGinVY+edoLiFn0JW6Gl45wNybnMVRmxHZirAJHS8ZAjnu6/wujeHA5I/L9WRP+PiMS1fgeU7CSqr5RIi6yuDg8H5hKAGRl2Yqrh8AemJQVCkpJlwspb5bcZwEXVRf2CkWgNXGHojmL0mYDLlzVyqQtyjgkcW8kUXOZUXXahm5gzCSfPr2G4qTCUlnBluZagovuGp8nI+2lDaePAfSnutKCstNyKHaVQQgkeKvlpVFLT95gPpB2Uk9wdFP7KGpzxBAoEFc/PEQiZO9ldC6w77lY7rPJcMtRgMqucm4Qqau/nBpqOBOQ1gGN1TAzpigM4StlDlCxqN+twfB2L/cjhJ9X/TSUZ13pDHawKRbGjFFbeo79qzw2Y4c7MAWQ0faGy6rvukyeqWMWKeBCRWhDts9wbR4g1dvScDAoEpGUR7NZCeEV9adb+rLo7rX9yjc1Gqxox1O6Ly/wuTMas9Ps+lj+XaUqDe94Cgc9TwVgr79Kv2NcCU8YvyX1bHKxoHgpKoYPLtfLBFBTw4OhJFGJwPTsW5K5pQwZt/8uDM5tU6uhVH8HlrHHB3NvONPgsP9SWxKgrNynvJGRmy1wyMgRTLu9vNgS7omBBkH4cAcPG9yBLeXfPdhmjBvPn9BqD3U=
  - secure: qwc5Ty3f1fVKFPdpqG2wND94FvcFTJ402OdHlBKbwzB2aqOu2DY1oCM0QujqYE7wmRMbZJCEJR6RfbVkJo4nC0HdwojFMN9NyqUZJizOzIZRVwJdRnoCHbXhiK4fvs90NMUztefhQPHkuj1lm8LWWcrI1pNcAevGxuaOz5eC2UHGRcxsa9ZFY3RpPA1y0J0H3xk/o0eZPYfMuT60V3XJPwDOr8tXJDmKfj7N5WyxpO4rZdxMEVHSZpzhDzeRofKv+VLZsCUDF3rGRElqrYO7l3k0SWb+d5fmE6uvx5tVnM7RooXZlRzAL6sqOzprdOhyK/sEKxtPQEZGSDeYWudBXqe92hen9gIlGwnHjCKnCd4X2e23gxqfNVVj8RKd/OPh3tmuh/OCEmA0rxyeT/9SMntwOS5GU6RLFW3RfbSn1A9fsZocTK5OXjyaXjKsngeDMUCdBfIGz5lI7G2sRMkLpiMlUFojOsX3Kzo+n5DAwkwJKe5MGwZIr1QG+i8Jx0LuZsifnzM5DKZYw5oTU0eQM/ZKRgdCHhEBM89LtfhU8Ub5B/jWZqfq9LiYoxSOuvaXBDJRuvUXTpHrOKzII9D+o9XyAfotZ4iRAPj4IBCtFQVcvX6wwiwbjyIH+JeJ+IgUBMidNRmO5vWB/4W+smB+cUWo6klQ3kYRxDOW2Z6M4vA=
